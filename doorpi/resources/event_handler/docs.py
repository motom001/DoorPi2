# -*- coding: utf-8 -*-

from main import DOORPI

DOCUMENTATION = dict(
    fulfilled_with_one = False,
    text_description = '''
Der Event-Handler ist das Herz-Stück von DoorPi und die Vermittlerstelle zwischen den Events und Actions.
Bei Ihm müssen sich alle Module anmelden, die Events "abfeuern" können oder Actions bei bestimmten Events ausgelöst bekommen wollen.
Jedes Event für sich wird seriell (eins nach dem anderen) abgearbeitet. Mehrere Events werden parallel (alle auf einmal) ausgeführt.
Damit das parallele Ausführen von Actions möglich wird, arbeitet der Event-Handler mit Threads.

Die ausgelösten Events werden in einer Datenbank (SQLLite) gespeichert und können z.B. in der Weboberfläche ausgewertet werden.
''',
    events = [
        #dict( name = 'OnTimeTick', description = '', parameter = [ dict( name = 'param1', type = 'string', default = 'sqllite', mandatory = False, description = 'Parameter 1 der zur Aktion übergeben wird' ) ]),
        dict( name = 'OnTimeTick', description = '', parameter = []),
        dict( name = 'OnTimeSecond', description = '', parameter = []),
        dict( name = 'OnTimeSecondEvenNumber', description = '', parameter = []),
        dict( name = 'OnTimeSecondUnevenNumber', description = '', parameter = []),
        dict( name = 'OnTimeMinuteEvenNumber', description = '', parameter = []),
        dict( name = 'OnTimeMinuteUnevenNumber', description = '', parameter = []),
        dict( name = 'OnTimeTick0', description = 'event fired once when minute switch to 0', parameter = []),
        dict( name = 'OnTimeTick1', description = 'event fired once when minute switch to 1', parameter = []),
        dict( name = 'OnTimeTick2', description = 'event fired once when minute switch to 2', parameter = []),
        dict( name = 'OnTimeTick3', description = 'event fired once when minute switch to 3', parameter = []),
        dict( name = 'OnTimeTick4', description = 'event fired once when minute switch to 4', parameter = []),
        dict( name = 'OnTimeTick5', description = 'event fired once when minute switch to 5', parameter = []),
        dict( name = 'OnTimeTick6', description = 'event fired once when minute switch to 6', parameter = []),
        dict( name = 'OnTimeTick7', description = 'event fired once when minute switch to 7', parameter = []),
        dict( name = 'OnTimeTick8', description = 'event fired once when minute switch to 8', parameter = []),
        dict( name = 'OnTimeTick9', description = 'event fired once when minute switch to 9', parameter = []),
        dict( name = 'OnTimeTick10', description = 'event fired once when minute switch to 10', parameter = []),
        dict( name = 'OnTimeTick11', description = 'event fired once when minute switch to 11', parameter = []),
        dict( name = 'OnTimeTick12', description = 'event fired once when minute switch to 12', parameter = []),
        dict( name = 'OnTimeTick13', description = 'event fired once when minute switch to 13', parameter = []),
        dict( name = 'OnTimeTick14', description = 'event fired once when minute switch to 14', parameter = []),
        dict( name = 'OnTimeTick15', description = 'event fired once when minute switch to 15', parameter = []),
        dict( name = 'OnTimeTick16', description = 'event fired once when minute switch to 16', parameter = []),
        dict( name = 'OnTimeTick17', description = 'event fired once when minute switch to 17', parameter = []),
        dict( name = 'OnTimeTick18', description = 'event fired once when minute switch to 18', parameter = []),
        dict( name = 'OnTimeTick19', description = 'event fired once when minute switch to 19', parameter = []),
        dict( name = 'OnTimeTick20', description = 'event fired once when minute switch to 20', parameter = []),
        dict( name = 'OnTimeTick21', description = 'event fired once when minute switch to 21', parameter = []),
        dict( name = 'OnTimeTick22', description = 'event fired once when minute switch to 22', parameter = []),
        dict( name = 'OnTimeTick23', description = 'event fired once when minute switch to 23', parameter = []),
        dict( name = 'OnTimeTick24', description = 'event fired once when minute switch to 24', parameter = []),
        dict( name = 'OnTimeTick25', description = 'event fired once when minute switch to 25', parameter = []),
        dict( name = 'OnTimeTick26', description = 'event fired once when minute switch to 26', parameter = []),
        dict( name = 'OnTimeTick27', description = 'event fired once when minute switch to 27', parameter = []),
        dict( name = 'OnTimeTick28', description = 'event fired once when minute switch to 28', parameter = []),
        dict( name = 'OnTimeTick29', description = 'event fired once when minute switch to 29', parameter = []),
        dict( name = 'OnTimeTick30', description = 'event fired once when minute switch to 30', parameter = []),
        dict( name = 'OnTimeTick31', description = 'event fired once when minute switch to 31', parameter = []),
        dict( name = 'OnTimeTick32', description = 'event fired once when minute switch to 32', parameter = []),
        dict( name = 'OnTimeTick33', description = 'event fired once when minute switch to 33', parameter = []),
        dict( name = 'OnTimeTick34', description = 'event fired once when minute switch to 34', parameter = []),
        dict( name = 'OnTimeTick35', description = 'event fired once when minute switch to 35', parameter = []),
        dict( name = 'OnTimeTick36', description = 'event fired once when minute switch to 36', parameter = []),
        dict( name = 'OnTimeTick37', description = 'event fired once when minute switch to 37', parameter = []),
        dict( name = 'OnTimeTick38', description = 'event fired once when minute switch to 38', parameter = []),
        dict( name = 'OnTimeTick39', description = 'event fired once when minute switch to 39', parameter = []),
        dict( name = 'OnTimeTick40', description = 'event fired once when minute switch to 40', parameter = []),
        dict( name = 'OnTimeTick41', description = 'event fired once when minute switch to 41', parameter = []),
        dict( name = 'OnTimeTick42', description = 'event fired once when minute switch to 42', parameter = []),
        dict( name = 'OnTimeTick43', description = 'event fired once when minute switch to 43', parameter = []),
        dict( name = 'OnTimeTick44', description = 'event fired once when minute switch to 44', parameter = []),
        dict( name = 'OnTimeTick45', description = 'event fired once when minute switch to 45', parameter = []),
        dict( name = 'OnTimeTick46', description = 'event fired once when minute switch to 46', parameter = []),
        dict( name = 'OnTimeTick47', description = 'event fired once when minute switch to 47', parameter = []),
        dict( name = 'OnTimeTick48', description = 'event fired once when minute switch to 48', parameter = []),
        dict( name = 'OnTimeTick49', description = 'event fired once when minute switch to 49', parameter = []),
        dict( name = 'OnTimeTick50', description = 'event fired once when minute switch to 50', parameter = []),
        dict( name = 'OnTimeTick51', description = 'event fired once when minute switch to 51', parameter = []),
        dict( name = 'OnTimeTick52', description = 'event fired once when minute switch to 52', parameter = []),
        dict( name = 'OnTimeTick53', description = 'event fired once when minute switch to 53', parameter = []),
        dict( name = 'OnTimeTick54', description = 'event fired once when minute switch to 54', parameter = []),
        dict( name = 'OnTimeTick55', description = 'event fired once when minute switch to 55', parameter = []),
        dict( name = 'OnTimeTick56', description = 'event fired once when minute switch to 56', parameter = []),
        dict( name = 'OnTimeTick57', description = 'event fired once when minute switch to 57', parameter = []),
        dict( name = 'OnTimeTick58', description = 'event fired once when minute switch to 58', parameter = []),
        dict( name = 'OnTimeTick59', description = 'event fired once when minute switch to 59', parameter = []),
        dict( name = 'OnTimeMinuteEvery5', description = '', parameter = []),
        dict( name = 'OnTimeHour', description = '', parameter = []),
        dict( name = 'OnTimeHourEvenNumber', description = '', parameter = []),
        dict( name = 'OnTimeHourUnevenNumber', description = '', parameter = []),
        dict( name = 'OnTimeHour0', description = 'event fired once when hour switch to 0', parameter = []),
        dict( name = 'OnTimeHour1', description = 'event fired once when hour switch to 1', parameter = []),
        dict( name = 'OnTimeHour2', description = 'event fired once when hour switch to 2', parameter = []),
        dict( name = 'OnTimeHour3', description = 'event fired once when hour switch to 3', parameter = []),
        dict( name = 'OnTimeHour4', description = 'event fired once when hour switch to 4', parameter = []),
        dict( name = 'OnTimeHour5', description = 'event fired once when hour switch to 5', parameter = []),
        dict( name = 'OnTimeHour6', description = 'event fired once when hour switch to 6', parameter = []),
        dict( name = 'OnTimeHour7', description = 'event fired once when hour switch to 7', parameter = []),
        dict( name = 'OnTimeHour8', description = 'event fired once when hour switch to 8', parameter = []),
        dict( name = 'OnTimeHour9', description = 'event fired once when hour switch to 9', parameter = []),
        dict( name = 'OnTimeHour10', description = 'event fired once when hour switch to 10', parameter = []),
        dict( name = 'OnTimeHour11', description = 'event fired once when hour switch to 11', parameter = []),
        dict( name = 'OnTimeHour12', description = 'event fired once when hour switch to 12', parameter = []),
        dict( name = 'OnTimeHour13', description = 'event fired once when hour switch to 13', parameter = []),
        dict( name = 'OnTimeHour14', description = 'event fired once when hour switch to 14', parameter = []),
        dict( name = 'OnTimeHour15', description = 'event fired once when hour switch to 15', parameter = []),
        dict( name = 'OnTimeHour16', description = 'event fired once when hour switch to 16', parameter = []),
        dict( name = 'OnTimeHour17', description = 'event fired once when hour switch to 17', parameter = []),
        dict( name = 'OnTimeHour18', description = 'event fired once when hour switch to 18', parameter = []),
        dict( name = 'OnTimeHour19', description = 'event fired once when hour switch to 19', parameter = []),
        dict( name = 'OnTimeHour20', description = 'event fired once when hour switch to 20', parameter = []),
        dict( name = 'OnTimeHour21', description = 'event fired once when hour switch to 21', parameter = []),
        dict( name = 'OnTimeHour22', description = 'event fired once when hour switch to 22', parameter = []),
        dict( name = 'OnTimeDay', description = '', parameter = []),
        dict( name = 'OnTimeDayEvenNumber', description = '', parameter = []),
        dict( name = 'OnTimeDayUnevenNumber', description = '', parameter = []),
        dict( name = 'OnTimeWeek', description = '', parameter = []),
        dict( name = 'OnTimeWeekEvenNumber', description = '', parameter = []),
        dict( name = 'OnTimeWeekUnevenNumber', description = '', parameter = []),
        dict( name = 'OnTimeMonth', description = '', parameter = []),
        dict( name = 'OnTimeMonthEvenNumber', description = '', parameter = []),
        dict( name = 'OnTimeMonthUnevenNumber', description = '', parameter = []),
        dict( name = 'OnTimeYear', description = '', parameter = []),
        dict( name = 'OnTimeYearEvenNumber', description = '', parameter = []),
        dict( name = 'OnTimeYearUnevenNumber', description = '', parameter = []),
    ],
    configuration = [
        #dict( json_path = 'resources/event_handler/event_log/typ', type = 'string', default = 'sqllite', mandatory = False, description = 'Typ der Event_Hanler Datenbank (aktuell nur sqllite)'),
        dict( json_path = '/resources/event_handler/event_log/type', type = 'string', default = 'sqllite', mandatory = False, description = 'Typ der Event_Hanler Datenbank (aktuell nur sqllite)'),
        dict( json_path = '/resources/event_handler/event_log/connection_string', type = 'string', default = '!BASE_PATH!/conf/event_log.db', mandatory = False, description = 'Verbindungsanweisung für die DB'),
    ],
    auto_install = dict(
        available = True,
        install = [],
        uninstall = [],
        update = []
    ),
    libraries = dict(
        threading = DOORPI.libraries['threading'].copy(),
        inspect = DOORPI.libraries['inspect'].copy(),
        sqlite3 = dict(
            mandatory =             True,
            text_warning =          '',
            text_description =      'SQLite is a C library that provides a lightweight disk-based database that doesn’t require a separate server process and allows accessing the database using a nonstandard variant of the SQL query language. Some applications can use SQLite for internal data storage. It’s also possible to prototype an application using SQLite and then port the code to a larger database such as PostgreSQL or Oracle.',
            text_installation =     'Eine Installation ist nicht nötig, da es sich hierbei um eine Python-Standard-Modul handelt.',
            auto_install =          dict(
                standard = True
            ),
            text_test =             'Der Status kann gestestet werden, in dem im Python-Interpreter <code>import sqlite3</code> eingeben wird.',
            text_configuration =    '',
            configuration = [
                dict( json_path = 'resources/event_handler/event_log/typ', type = 'string', default = 'sqllite', mandatory = False, description = 'Typ der Event_Handler Datenbank (aktuell nur sqllite)'),
                dict( json_path = 'resources/event_handler/event_log/connection_string', type = 'string', default = '!BASEPATH!/conf/eventlog.db', mandatory = False, description = 'Ablageort der SQLLite Datenbank für den Event-Handler.')
            ],
            text_links = {
                'docs.python.org': 'https://docs.python.org/%s/library/sqlite3.html'%DOORPI.CONST.USED_PYTHON_VERSION
            }
        )
    )
)
